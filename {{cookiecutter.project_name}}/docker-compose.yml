version: "3"

# All available services
services:

  # Computation
  jupyter:
    container_name: "{{cookiecutter.project_name}}_jupyter"
    restart: "always"
    build: services/jupyter
    env_file:
      - ./config/jupyter.env
      - ./config/minio.env
      - ./config/shared_database.env
    volumes:
      - ./shared/notebooks/:/home/{{cookiecutter.owner_name}}/work/notebooks
      - ./shared/dags/:/home/{{cookiecutter.owner_name}}/work/dags
      - ./services/apistar/api/:/home/{{cookiecutter.owner_name}}/work/api
    ports:
      - 8888:8888
    entrypoint: sh -c 'start-notebook.sh --NotebookApp.token=$$JUPYTER_PASSWORD'

  # Visualization
  superset:
    container_name: "{{cookiecutter.project_name}}_superset"
    restart: "always"
    image: amancevice/superset:edge
    depends_on:
        - postgres
    env_file:
        - ./config/superset_container.env
        - ./config/superset_database.env
    ports:
      - 8088:8088

  # Misc Storage
  postgres:
    container_name: "{{cookiecutter.project_name}}_postgres"
    restart: "always"
    image: postgres
    env_file:
      - ./config/postgres.env
      - ./config/superset_database.env
      - ./config/airflow_database.env
      - ./config/shared_database.env
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
      - ./services/postgres/:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432

  # Model Storage
  minio:
    container_name: "{{cookiecutter.project_name}}_minio"
    restart: "always"
    image: minio/minio
    env_file:
        - ./config/minio.env
    volumes:
        - minio_volume:/data
    ports:
        - 9000:9000
    command: server /data

  # API
  apistar:
    container_name: "{{cookiecutter.project_name}}_apistar"
    restart: "always"
    build: services/apistar
    env_file:
      - ./config/minio.env
    volumes:
      - ./services/apistar/api:/usr/src/app
    ports:
      - 8000:8000
    command: gunicorn app:app -b 0.0.0.0:8000

  # Admin Overview
  portainer:
    container_name: "{{cookiecutter.project_name}}_portainer"
    restart: "always"
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_volume:/data
    ports:
      - 9090:9000
    command: -H unix:///var/run/docker.sock

  # Scheduling
  webserver:
      container_name: "{{cookiecutter.project_name}}_airflow_webserver"
      restart: "always"
      image: puckel/docker-airflow:1.10.6
      restart: always
      depends_on:
          - postgres
          - redis
      env_file:
        - ./config/airflow_container.env
        - ./config/minio.env
        - ./config/shared_database.env
      volumes:
        - ./shared/requirements.txt:/requirements.txt
        - ./shared/dags/:/usr/local/airflow/dags
        - ./shared/dags/:/usr/local/airflow/notebooks #for papermill usage

      ports:
          - "8080:8080"
      command: webserver
      healthcheck:
          test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
          interval: 30s
          timeout: 30s
          retries: 3

  flower:
      container_name: "{{cookiecutter.project_name}}_airflow_flower"
      restart: "always"
      image: puckel/docker-airflow:1.10.6
      restart: always
      depends_on:
          - redis
      environment:
          - EXECUTOR=Celery
          # - REDIS_PASSWORD=redispass
      ports:
          - 5555:5555
      command: flower

  scheduler:
      container_name: "{{cookiecutter.project_name}}_airflow_scheduler"
      restart: "always"
      image: puckel/docker-airflow:1.10.6
      restart: always
      depends_on:
          - webserver
      env_file:
        - ./config/airflow_container.env
        - ./config/minio.env
        - ./config/shared_database.env
      volumes:
        - ./shared/requirements.txt:/requirements.txt
        - ./shared/dags/:/usr/local/airflow/dags
        - ./shared/dags/:/usr/local/airflow/notebooks #for papermill usage

      command: scheduler

  worker:
      container_name: "{{cookiecutter.project_name}}_airflow_worker"
      image: puckel/docker-airflow:1.10.6
      restart: always
      depends_on:
          - scheduler
      env_file:
        - ./config/airflow_container.env
        - ./config/minio.env
        - ./config/shared_database.env
      volumes:
        - ./shared/requirements.txt:/requirements.txt
        - ./shared/dags/:/usr/local/airflow/dags
        - ./shared/dags/:/usr/local/airflow/notebooks #for papermill usage
      command: worker

  redis:
      image: 'redis:5.0.7'
      # command: redis-server --requirepass redispass

# Volumes to persist data
volumes:
  postgres_volume:
  minio_volume:
  portainer_volume:
